{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Car Plate Recognition API",
		"description": "Complete API collection for Car Plate Recognition System using ChatGPT Vision API\n\nThis collection includes all endpoints for:\n- Image upload and recognition\n- Car data retrieval\n- Statistics and health checks\n\nDesigned by: Eng. Bashar Zabadani\nCompany: iDEALCHiP Technology Co\nEmail: basharagb@gmail.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check API health status and configuration"
			}
		},
		{
			"name": "Upload and Recognize Cars",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "images",
							"type": "file",
							"src": [],
							"description": "Upload one or more car images (JPG, PNG, WebP)"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/recognize",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"recognize"
					]
				},
				"description": "Upload car images and get recognition results using ChatGPT Vision API"
			}
		},
		{
			"name": "Get All Cars",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cars?page=1&limit=10&sortBy=timestamp&sortOrder=DESC",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"description": "Page number (default: 1)"
						},
						{
							"key": "limit",
							"value": "10",
							"description": "Items per page (default: 10, max: 100)"
						},
						{
							"key": "plateNumber",
							"value": "",
							"description": "Filter by plate number (partial match)",
							"disabled": true
						},
						{
							"key": "color",
							"value": "",
							"description": "Filter by car color",
							"disabled": true
						},
						{
							"key": "type",
							"value": "",
							"description": "Filter by car type",
							"disabled": true
						},
						{
							"key": "startDate",
							"value": "",
							"description": "Filter from date (ISO format)",
							"disabled": true
						},
						{
							"key": "endDate",
							"value": "",
							"description": "Filter to date (ISO format)",
							"disabled": true
						},
						{
							"key": "sortBy",
							"value": "timestamp",
							"description": "Sort field (timestamp, plateNumber, color, type)"
						},
						{
							"key": "sortOrder",
							"value": "DESC",
							"description": "Sort order (ASC or DESC)"
						}
					]
				},
				"description": "Get all recognized cars with filtering, sorting, and pagination"
			}
		},
		{
			"name": "Get Single Car",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cars/{{carId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars",
						"{{carId}}"
					]
				},
				"description": "Get details of a single car by ID"
			}
		},
		{
			"name": "Get Statistics",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cars/statistics",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars",
						"statistics"
					]
				},
				"description": "Get comprehensive statistics about recognized cars"
			}
		},
		{
			"name": "Delete Car",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cars/{{carId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars",
						"{{carId}}"
					]
				},
				"description": "Delete a car record by ID"
			}
		},
		{
			"name": "Filter Cars by Plate Number",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cars?plateNumber=123&limit=5",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars"
					],
					"query": [
						{
							"key": "plateNumber",
							"value": "123",
							"description": "Search for plates containing '123'"
						},
						{
							"key": "limit",
							"value": "5"
						}
					]
				},
				"description": "Example of filtering cars by plate number"
			}
		},
		{
			"name": "Filter Cars by Color and Type",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cars?color=white&type=sedan&limit=10",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars"
					],
					"query": [
						{
							"key": "color",
							"value": "white",
							"description": "Filter by white cars"
						},
						{
							"key": "type",
							"value": "sedan",
							"description": "Filter by sedan type"
						},
						{
							"key": "limit",
							"value": "10"
						}
					]
				},
				"description": "Example of filtering cars by multiple criteria"
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3001/api",
			"type": "string"
		},
		{
			"key": "carId",
			"value": "1",
			"type": "string",
			"description": "ID of a car for testing single car operations"
		}
	]
}
